---
- name: Download RHEL image
  get_url:
     url: http://www.opentlc.com/download/osp_advanced_networking/rhel-guest-image-7.2-20151102.0.x86_64.qcow2
     dest: /tmp/rhel.qcow2
  tags:
      - tested

- name: Create openstack image
  os_image:
     cloud: ospcloud
     name: rhel-guest
     container_format: bare
     disk_format: qcow2
     state: present
     filename: /tmp/rhel.qcow2
  tags:
      - tested

- name: Generate key files
  user:
    name: "{{ ansible_env.USER }}"
    generate_ssh_key: yes
    ssh_key_file: .ssh/test_id_rsa

- name: Create OSP keypair
  os_keypair:
    cloud: ospcloud
    state: present
    name: ansible_ssh
    public_key_file: "{{ ansible_env.HOME }}/.ssh/test_id_rsa.pub"

- name: Configuration of Public and Private Networks
  os_network:
    cloud: "{{ item.value.cloud_name }}"
    state: "{{ item.value.state }}"
    name: "{{ item.value.network_name }}"
    external: "{{ item.value.external }}"
  with_dict: "{{ osp_networks }}"

- name: Configuration of Subnets for Public and Private SubNets
  os_subnet:
    cloud: "{{ item.value.cloud_name }}"
    state: "{{ item.value.state }}"
    network_name: "{{ item.value.network_name  }}"
    name: "{{ item.value.subnet_name  }}"
    cidr: "{{ item.value.cidr_network }}"
    dns_nameservers:
      - 8.8.8.7
      - 8.8.8.8
    host_routes:
      - destination: 0.0.0.0/0
        nexthop: 10.10.10.0
      - destination: 192.168.0.0/24
        nexthop: 192.168.0.0
  with_dict: "{{ osp_networks }}"

- name: Create Router
  os_router:
    cloud: "{{ item.value.cloud_name }}"
    state: "{{ item.value.state }}"
    name: "{{ item.value.name }}"
    network: "{{ item.value.network }}"
    external_fixed_ips:
      - { subnet: ext_subnet }
    interfaces:
      - int_subnet
  with_dict: "{{ osp_router }}"

- name: Create Security Group Apps
  os_security_group:
    cloud: ospcloud
    state: present
    name: apps
    description: ports_open

- name: Create Security Group Rule Apps
  os_security_group_rule:
    cloud: ospcloud
    security_group: apps 
    protocol: tcp
    port_range_min: "{{ item.port }}"
    port_range_max: "{{ item.port }}" 
    remote_ip_prefix: "{{ item.ip_prefix }}"
  with_items:
    - { port: '8080', ip_prefix: '0.0.0.0/0' }
    - { port: '22', ip_prefix: '0.0.0.0/0' }

- name: Create Security Group Frontend
  os_security_group:
    cloud: ospcloud
    state: present
    name: frontend
    description: ports_open

- name: Create Security Group Rule Frontend
  os_security_group_rule:
    cloud: ospcloud
    security_group: frontend 
    protocol: tcp
    port_range_min: "{{ item.port }}"
    port_range_max: "{{ item.port }}" 
    remote_ip_prefix: "{{ item.ip_prefix }}"
  with_items:
    - { port: '80', ip_prefix: '0.0.0.0/0' }
    - { port: '443', ip_prefix: '0.0.0.0/0' }
    - { port: '22', ip_prefix: '0.0.0.0/0' }
      
- name: Create Security Group DB
  os_security_group:
    cloud: ospcloud
    state: present
    name: db
    description: ports_open

- name: Create Security Group Rule DB
  os_security_group_rule:
    cloud: ospcloud
    security_group: db
    protocol: tcp
    port_range_min: "{{ item.port }}"
    port_range_max: "{{ item.port }}" 
    remote_ip_prefix: "{{ item.ip_prefix }}"
  with_items:
    - { port: '5432', ip_prefix: '20.20.20.0/24' }
    - { port: '22', ip_prefix: '0.0.0.0/0' }

- name: Create m2.small flavor
  os_nova_flavor:
     cloud: ospcloud
     state: present
     name: m2.small
     ram: 2048
     vcpus: 1
     disk: 10
